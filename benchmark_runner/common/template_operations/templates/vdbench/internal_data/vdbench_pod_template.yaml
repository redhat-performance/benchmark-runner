apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
{%- if odf_pvc == True %}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vdbench-pod-pvc-claim
  namespace: {{ namespace }}
spec:
  storageClassName: ocs-storagecluster-ceph-rbd
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ storage }}
{%- endif %}
---
apiVersion: v1
kind: Pod
metadata:
  name: vdbench-{{ kind }}-{{ trunc_uuid }}
  namespace: {{ namespace }}
  labels:
    app: vdbench-{{ trunc_uuid }}
    type: vdbench-{{ kind }}-{{ trunc_uuid }}
    benchmark-uuid: {{ uuid }}
    benchmark-runner-workload: vdbench
spec:
  selector:
    matchLabels:
      app: vdbench
  {%- if pin_node != '' %}
  nodeSelector:
    kubernetes.io/hostname: {{ pin_node1 }}
  {%- endif %}
  {%- if kind == 'kata' %}
  runtimeClassName: kata
  {%- endif %}
  resources:
    requests:
      cpu: {{ requests_cpu }}
      memory: {{ requests_memory }}
    limits:
      cpu: {{ limits_cpu }}
      memory: {{ limits_memory }}
  containers:
    - name: vdbench-pod
      namespace: {{ namespace }}
      image: quay.io/ebattat/centos-stream8-vdbench5.04.07-pod
      imagePullPolicy: "IfNotPresent"
      {%- if odf_pvc == True %}
      volumeMounts:
        - name: vdbench-pod-pvc-claim
          mountPath: "/workload"
      {%- endif %}
      env:
        - name: BLOCK_SIZES
          value: "{{ BLOCK_SIZES }}"
        - name: IO_OPERATION
          value: "{{ IO_OPERATION }}"
        - name: IO_THREADS
          value: "{{ IO_THREADS }}"
        - name: FILES_IO #How file IO will be done
          value: "{{ FILES_IO }}"
        - name: IO_RATE # an integer or "max"
          value: "{{ IO_RATE }}"
        - name: MIX_PRECENTAGE # used for mixed workload 0-100
          value:
        #global settings
        - name: DURATION
          value: "{{ DURATION }}"
        - name: PAUSE #pause after every test in sec
          value: "{{ PAUSE }}"
        - name: WARMUP # warmup before any test in sec
          value: "{{ WARMUP }}"
        - name: FILES_SELECTION #This parameter allows you to select directories and files for processing either sequential/random
          value: "{{ FILES_SELECTION }}"
        - name: COMPRESSION_RATIO #ratio is 1:X e.g 2 = 50% compressible
          value: "{{ COMPRESSION_RATIO }}"
        - name: RUN_FILLUP #will it run a fillup before testing starts yes/no
          value: "{{ RUN_FILLUP }}"
        #data set settings
        - name: DIRECTORIES #how many directories to create
          value: "{{ DIRECTORIES }}"
        - name: FILES_PER_DIRECTORY
          value: "{{ FILES_PER_DIRECTORY }}"
        - name: SIZE_PER_FILE # size in MB
          value: "{{ SIZE_PER_FILE }}"
      command: ["/bin/bash"]
      args: ["-c", "/vdbench/vdbench_runner.sh"]
  restartPolicy: "Never"
  spec:
    pvc:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ storage }}
          Reclaim Policy: Delete
      storageClassName: ocs-storagecluster-ceph-rbd
    source:
      blank: {}
  {%- if odf_pvc == True %}
  volumes:
    - name: vdbench-pod-pvc-claim
      namespace: {{ namespace }}
      persistentVolumeClaim:
        claimName: vdbench-pod-pvc-claim
  {%- endif %}

