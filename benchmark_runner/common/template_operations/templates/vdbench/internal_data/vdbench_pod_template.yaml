{%- if not scale %}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
---
{%- endif %}
{%- if cluster == "kubernetes" %}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vdbench-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: {{ storage }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vdbench-pod-pvc-claim
  namespace: {{ namespace }}
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ storage }}
{%- endif %}
{%- if odf_pvc == True %}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  {% if not scale -%}
  name: vdbench-pod-pvc-claim
  {%- else -%}
  name: vdbench-pod-pvc-claim-{{ scale }}
  {%- endif %}
  namespace: {{ namespace }}
spec:
  storageClassName: ocs-storagecluster-ceph-rbd
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ storage }}
{%- endif %}
---
apiVersion: v1
kind: Pod
metadata:
  {% if not scale -%}
  name: vdbench-{{ kind }}-{{ trunc_uuid }}
  {%- else -%}
  name: vdbench-{{ kind }}-{{ trunc_uuid }}-{{ scale }}
  {%- endif %}
  namespace: {{ namespace }}
  labels:
    {% if not scale -%}
    app: vdbench-{{ trunc_uuid }}
    type: vdbench-{{ kind }}-{{ trunc_uuid }}
    {%- else -%}
    app: vdbench-{{ trunc_uuid }}-{{ scale }}
    type: vdbench-{{ kind }}-{{ trunc_uuid }}-{{ scale }}
    {%- endif %}
    benchmark-uuid: {{ uuid }}
    benchmark-runner-workload: vdbench
spec:
  {%- if cluster != "kubernetes" %}
  selector:
    matchLabels:
      app: vdbench
  {%- endif %}
  {%- if cluster == "kubernetes" %}
  volumes:
    - name: vdbench-pod-vol
      persistentVolumeClaim:
        claimName: vdbench-pod-pvc-claim
  {%- endif %}
  {%- if pin_node1 or scale_node %}
  nodeSelector:
    {% if not scale -%}
    kubernetes.io/hostname: {{ pin_node1 }}
    {%- else -%}
    kubernetes.io/hostname: {{ scale_node }}
    {%- endif %}
  {%- endif %}
  {%- if kind == 'kata' %}
  runtimeClassName: kata
  {%- endif %}
  containers:
    - name: vdbench-pod
      image: quay.io/ebattat/centos-stream8-vdbench5.04.07-pod:v1.0.10
      imagePullPolicy: "IfNotPresent"
      resources:
        requests:
          cpu: {{ requests_cpu }}
          memory: {{ requests_memory }}
        limits:
          cpu: {{ limits_cpu }}
          memory: {{ limits_memory }}
      {%- if cluster == "kubernetes" %}
      volumeMounts:
        - name: vdbench-pod-vol
          mountPath: "/workload"
      {%- endif %}
      {%- if odf_pvc == True %}
      volumeMounts:
        {% if not scale -%}
        - name: vdbench-pod-pvc-claim
        {%- else -%}
        - name: vdbench-pod-pvc-claim-{{ scale }}
        {%- endif %}
          mountPath: "/workload"
      {%- endif %}
      env:
        - name: BLOCK_SIZES
          value: "{{ BLOCK_SIZES }}"
        - name: IO_OPERATION
          value: "{{ IO_OPERATION }}"
        - name: IO_THREADS
          value: "{{ IO_THREADS }}"
        - name: FILES_IO #How file IO will be done
          value: "{{ FILES_IO }}"
        - name: IO_RATE # an integer or "max"
          value: "{{ IO_RATE }}"
        - name: MIX_PRECENTAGE # used for mixed workload 0-100
          value:
        #global settings
        - name: DURATION
          value: "{{ DURATION }}"
        - name: PAUSE #pause after every test in sec
          value: "{{ PAUSE }}"
        - name: WARMUP # warmup before any test in sec
          value: "{{ WARMUP }}"
        - name: FILES_SELECTION #This parameter allows you to select directories and files for processing either sequential/random
          value: "{{ FILES_SELECTION }}"
        - name: COMPRESSION_RATIO #ratio is 1:X e.g 2 = 50% compressible
          value: "{{ COMPRESSION_RATIO }}"
        - name: RUN_FILLUP #will it run a fillup before testing starts yes/no
          value: "{{ RUN_FILLUP }}"
        #data set settings
        - name: DIRECTORIES #how many directories to create
          value: "{{ DIRECTORIES }}"
        - name: FILES_PER_DIRECTORY
          value: "{{ FILES_PER_DIRECTORY }}"
        - name: SIZE_PER_FILE # size in MB
          value: "{{ SIZE_PER_FILE }}"
        #state-signals
        - name: REDIS_HOST
          value: "{{ redis }}"
        - name: WORKLOAD_METHOD
          value: "/vdbench/vdbench_runner.sh"
        - name: TIMEOUT
          value: "{{ timeout }}"
      command: ["/bin/bash"]
      {% if not scale -%}
      args: ["-c", "$WORKLOAD_METHOD"]
      {%- else -%}
      args: ["-c", "python3.9 /state_signals_responder.py $REDIS_HOST $WORKLOAD_METHOD $TIMEOUT"]
      {%- endif %}
  restartPolicy: "Never"
  {%- if cluster != "kubernetes" %}
  spec:
    pvc:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ storage }}
          Reclaim Policy: Delete
      storageClassName: ocs-storagecluster-ceph-rbd
    source:
      blank: {}
  {%- endif %}
  {%- if odf_pvc == True %}
  volumes:
    {% if not scale -%}
    - name: vdbench-pod-pvc-claim
      namespace: {{ namespace }}
      persistentVolumeClaim:
        claimName: vdbench-pod-pvc-claim
    {%- else -%}
    - name: vdbench-pod-pvc-claim-{{ scale }}
      namespace: {{ namespace }}
      persistentVolumeClaim:
        claimName: vdbench-pod-pvc-claim-{{ scale }}
    {%- endif %}
  {%- endif %}

