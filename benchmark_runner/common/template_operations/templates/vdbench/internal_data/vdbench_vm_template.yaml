{% if not scale %}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
{%- endif %}
{%- if odf_pvc == True %}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  {% if not scale -%}
  name: vdbench-pvc-claim
  {%- else -%}
  name: vdbench-pvc-claim-{{ scale }}
  {%- endif %}
  namespace: {{ namespace }}
spec:
  storageClassName: ocs-storagecluster-ceph-rbd
  accessModes: [ "ReadWriteOnce" ]
  volumeMode: Block
  resources:
    requests:
      storage: {{ storage }}
{%- endif %}
---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  {% if not scale -%}
  name: vdbench-{{ kind }}-{{ trunc_uuid }}
  {%- else -%}
  name: vdbench-{{ kind }}-{{ trunc_uuid }}-{{ scale }}
  {%- endif %}
  namespace: {{ namespace }}
  labels:
    {% if not scale -%}
    app: vdbench-{{ trunc_uuid }}
    type: vdbench-{{ kind }}-{{ trunc_uuid }}
    {%- else -%}
    app: vdbench-{{ trunc_uuid }}-{{ scale }}
    type: vdbench-{{ kind }}-{{ trunc_uuid }}-{{ scale }}
    {%- endif %}
    benchmark-uuid: {{ uuid }}
    benchmark-runner-workload: vdbench
spec:
  running: true
  template:
    metadata:
      labels:
        kubevirt-vm: vdbench
    spec:
      {%- if pin_node1 or scale_node %}
      nodeSelector:
        {% if not scale -%}
        kubernetes.io/hostname: {{ pin_node1 }}
        {%- else -%}
        kubernetes.io/hostname: {{ scale_node }}
        {%- endif %}
      {%- endif %}
      domain:
        cpu:
          sockets: {{ sockets }}
          cores: 1
          threads: 1
        devices:
          disks:
            - disk:
                bus: virtio
              name: containerdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
            - disk:
                bus: virtio
              name: data-volume
              serial: vdbenchdata
        machine:
          type: ""
        resources:
          requests:
            cpu: {{ requests_cpu }}
            memory: {{ requests_memory }}
          limits:
            cpu: {{ limits_cpu }}
            memory: {{ requests_memory }}
      terminationGracePeriodSeconds: 0
      volumes:
{%- if odf_pvc == True %}
        - name: data-volume
          persistentVolumeClaim:
            {% if not scale -%}
            claimName: vdbench-pvc-claim
            {%- else -%}
            claimName: vdbench-pvc-claim-{{ scale }}
            {%- endif %}
{%- endif %}
        - containerDisk:
            image: {{ centos_stream8_container_disk }}
          name: containerdisk
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              password: centos
              chpasswd: { expire: False }
              bootcmd:
                - "mkdir -p /workload || true"
                - "[ -e /dev/disk/by-id/*vdbenchdata ] && disk=$(shopt -s nullglob; basename /dev/disk/by-id/*vdbenchdata) && mkfs.ext4 /dev/disk/by-id/$disk && mount /dev/disk/by-id/$disk /workload"
              runcmd:
                - export BLOCK_SIZES={{ BLOCK_SIZES }}
                - export IO_OPERATION={{ IO_OPERATION }}
                - export IO_THREADS={{ IO_THREADS }}
                - export FILES_IO={{ FILES_IO }}
                - export IO_RATE={{ IO_RATE }}
                - export MIX_PRECENTAGE # used for mixed workload 0-100
                - export DURATION={{ DURATION }}
                - export PAUSE={{ PAUSE }}
                - export WARMUP={{ WARMUP }}
                - export FILES_SELECTION={{ FILES_SELECTION }}
                - export COMPRESSION_RATIO={{ COMPRESSION_RATIO }}
                - export RUN_FILLUP={{ RUN_FILLUP }}
                - export DIRECTORIES={{ DIRECTORIES }}
                - export FILES_PER_DIRECTORY={{ FILES_PER_DIRECTORY }}
                - export SIZE_PER_FILE={{ SIZE_PER_FILE }}
                - export REDIS_HOST={{ redis }}
                - export WORKLOAD_METHOD={{ WORKLOAD_METHOD }}
                - export TIMEOUT={{ timeout }}
                - export LOGS_DIR={{ LOGS_DIR }}
                - echo @@~@@START-WORKLOAD@@~@@
                {% if not scale -%}
                - podman run --rm -e BLOCK_SIZES="$BLOCK_SIZES" -e IO_OPERATION="$IO_OPERATION" -e IO_THREADS="$IO_THREADS" -e FILES_IO="$FILES_IO" -e IO_RATE="$IO_RATE" -e MIX_PRECENTAGE="$MIX_PRECENTAGE" -e DURATION="$DURATION" -e PAUSE="$PAUSE" -e WARMUP="$WARMUP" -e FILES_SELECTION="$FILES_SELECTION" -e COMPRESSION_RATIO="$COMPRESSION_RATIO" -e RUN_FILLUP="$RUN_FILLUP" -e DIRECTORIES="$DIRECTORIES" -e FILES_PER_DIRECTORY="$FILES_PER_DIRECTORY" -e SIZE_PER_FILE="$SIZE_PER_FILE" -e REDIS_HOST="$REDIS_HOST" -e LOGS_DIR="$LOGS_DIR" -e TIMEOUT="$TIMEOUT" -v "/workload":"/workload" --privileged {{ vdbench_image }} "$WORKLOAD_METHOD"
                {%- else -%}
                - podman run --rm -e BLOCK_SIZES="$BLOCK_SIZES" -e IO_OPERATION="$IO_OPERATION" -e IO_THREADS="$IO_THREADS" -e FILES_IO="$FILES_IO" -e IO_RATE="$IO_RATE" -e  MIX_PRECENTAGE="$MIX_PRECENTAGE" -e DURATION="$DURATION" -e  PAUSE="$PAUSE" -e WARMUP="$WARMUP" -e FILES_SELECTION="$FILES_SELECTION" -e COMPRESSION_RATIO="$COMPRESSION_RATIO" -e RUN_FILLUP="$RUN_FILLUP" -e DIRECTORIES="$DIRECTORIES" -e FILES_PER_DIRECTORY="$FILES_PER_DIRECTORY" -e SIZE_PER_FILE="$SIZE_PER_FILE" -e REDIS_HOST="$REDIS_HOST" -e LOGS_DIR="$LOGS_DIR" -e TIMEOUT="$TIMEOUT" -v "/workload":"/workload" --privileged {{ vdbench_image }} python3.9 /state_signals_responder.py "$REDIS_HOST" "$WORKLOAD_METHOD" "$TIMEOUT"
                {%- endif %}
                - echo @@~@@END-WORKLOAD@@~@@
          name: cloudinitdisk
