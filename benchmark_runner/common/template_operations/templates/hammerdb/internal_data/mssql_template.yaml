apiVersion: v1
kind: Namespace
metadata:
  name: mssql-db
---
{%- if kind == 'kata' %}
#This is a tweak of the restricted scc, to allow fsGroup to be specified in a deployment
# workaround for kata virtiofsd permission error in ODF 4.10.5
apiVersion: security.openshift.io/v1
metadata:
  name: mssqldbscc
kind: SecurityContextConstraints
fsGroup:
  type: RunAsAny
runAsUser:
  type: MustRunAsRange
seLinuxContext:
  type: MustRunAs
users:
- system:serviceaccount:mssql-db:default
---
{%- endif %}
{%- if storage_type == 'lso' %}
apiVersion: local.storage.openshift.io/v1
kind: LocalVolume
metadata:
  name: local-disks
  namespace: openshift-local-storage
spec:
  nodeSelector:
    nodeSelectorTerms:
    - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ pin_node2 }}
  storageClassDevices:
    - storageClassName: local-sc
      volumeMode: Filesystem
      fsType: ext4
      devicePaths:
        - {{ lso_path }}
---
{%- endif %}
{%- if storage_type == 'lso' or  odf_pvc == True %}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: mssql-persistent-storage
    namespace: mssql-db
spec:
    {%- if storage_type == 'lso' %}
    storageClassName: local-sc
    {%- else %}
    storageClassName: ocs-storagecluster-ceph-rbd
    {%- endif %}
    accessModes: [ "ReadWriteOnce" ]
    volumeMode: Filesystem
    resources:
      requests:
        storage: {{ storage }}
---
{%- endif %}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
  namespace: mssql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
        type: mssql-database-server
      {%- if kind == 'kata' and kata_cpuoffline_workaround == True %}
      annotations:
        io.katacontainers.config.hypervisor.default_vcpus: "{{ database_limits_cpu }}"
      {%- endif %}
    spec:
      nodeSelector:
        kubernetes.io/hostname: "{{ pin_node2 }}"
      {%- if kind == 'kata' %}
      runtimeClassName: kata
      # workaround for kata virtiofsd permission error in ODF 4.10.5
      securityContext:
        fsGroup: 0
      {%- endif %}
      terminationGracePeriodSeconds: 10
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/rhel/server:2019-latest
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 1433
        resources:
          requests:
            cpu: {{ database_requests_cpu }}
            memory: {{ database_requests_memory }}
          limits:
          {%- if kind != 'kata' or kata_cpuoffline_workaround != True %}
            cpu: {{ database_limits_cpu }}
            {%- endif %}
            memory: {{ database_limits_memory }}
        env:
          - name: MSSQL_PID
            value: "Enterprise"
          - name: ACCEPT_EULA
            value: "Y"
          - name: MSSQL_SA_PASSWORD
            value: "s3curePasswordString"
        securityContext:
          allowPrivilegeEscalation: true
      {%- if storage_type == 'lso' or odf_pvc == True %}
        volumeMounts:
          - name: mssql-persistent-storage
            mountPath: /var/opt/mssql
            readOnly: false
      volumes:
        - name: mssql-persistent-storage
          persistentVolumeClaim:
            claimName: mssql-persistent-storage
      {%- endif %}
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-deployment
  namespace: mssql-db
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
