# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: PR Test CI

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [[ -f requirements.txt ]]; then pip install -r requirements.txt; fi
        if [[ -f tests_requirements.txt ]]; then pip install -r tests_requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG_CI }} # Use secret (https://developer.github.com/actions/managing-workflows/storing-secrets/)
      id: setcontext
    - name: ðŸ“ƒ Test with pytest
      env:
        KUBEADMIN_PASSWORD: ${{ secrets.KUBEADMIN_PASSWORD_CI }}
        PIN_NODE1: ${{ secrets.PIN_NODE1_CI }}
        PIN_NODE2: ${{ secrets.PIN_NODE2_CI }}
        RUNNER_PATH: ${{ secrets.RUNNER_PATH }}
        ELASTICSEARCH: ${{ secrets.ELASTICSEARCH_CI }}
        ELASTICSEARCH_PORT: ${{ secrets.ELASTICSEARCH_PORT_CI }}
      run: |
        # update hosts ci file
        sudo echo "${{ secrets.HOSTS1_CI }}" | sudo tee -a /etc/hosts
        sudo echo "${{ secrets.HOSTS2_CI }}" | sudo tee -a /etc/hosts
        # Install Dockerfile content for pytest
        # install oc/kubctl
        oc_version=4.7.0-0.okd-2021-05-22-050008
        curl -L https://github.com/openshift/okd/releases/download/${oc_version}/openshift-client-linux-${oc_version}.tar.gz -o $RUNNER_PATH/openshift-client-linux-${oc_version}.tar.gz
        tar -xzvf $RUNNER_PATH/openshift-client-linux-${oc_version}.tar.gz -C $RUNNER_PATH/
        rm $RUNNER_PATH/openshift-client-linux-${oc_version}.tar.gz
        echo alias oc=$RUNNER_PATH/./oc >> $RUNNER_PATH/.bashrc
        echo alias kubectl=$RUNNER_PATH/./kubectl >> $RUNNER_PATH/.bashrc

        # clone benchmark-operator
        git clone https://github.com/cloud-bulldozer/benchmark-operator $RUNNER_PATH/benchmark-operator

        # run pytest
        python -m pytest
