# Nightly CI https://github.com/marketplace/actions/deploy-nightly
# https://crontab.guru/
# This is a nightly CI Pipeline against Performance environment using IPI installer - run on Sunday
name: Deploy IPI FUNC Env Nightly CI

#on:
#  workflow_run:
#    workflows: ["Deploy Operator FUNC Env Nightly CI"]
#    types:
#      - completed

on:
  schedule:
    - cron: '0 4 * * 6' # run on Saturday at 4 AM UTC/ 0 AM EDT

#on:
#  push:
#    branches: [ main ]

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: functional-environment
  cancel-in-progress: false

jobs:
  ocp_ipi_installation:
    name: OCP
    runs-on: ubuntu-latest
    strategy:
       # run one job every time
       max-parallel: 1
       # continue to next job if failed
       fail-fast: false
       matrix: 
          step: [ 'run_ibm_ocp_ipi_installer', 'verify_install_complete' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install latest benchmark-runner
        run: |
          python -m pip install --upgrade pip
          pip install benchmark-runner
      - name: ⚙️ SET SSH key
        env:
          FUNC_PROVISION_PRIVATE_KEY: ${{ secrets.FUNC_PROVISION_PRIVATE_KEY }}
          RUNNER_PATH: ${{ secrets.RUNNER_PATH }}
          FUNC_PROVISION_IP: ${{ secrets.FUNC_PROVISION_IP }}
          FUNC_PROVISION_USER: ${{ secrets.FUNC_PROVISION_USER }}
        run: |
          mkdir -p "$RUNNER_PATH/.ssh/"
          echo "$FUNC_PROVISION_PRIVATE_KEY" > $RUNNER_PATH/private_key.txt
          sudo chmod 600 $RUNNER_PATH/private_key.txt
          echo "FUNC_PROVISION_PRIVATE_KEY_PATH=$RUNNER_PATH/private_key.txt" >> "$GITHUB_ENV"
          cat >> "$RUNNER_PATH/.ssh/config" <<END
          Host provision
            HostName $FUNC_PROVISION_IP
            User $FUNC_PROVISION_USER
            IdentityFile $RUNNER_PATH/private_key.txt
            StrictHostKeyChecking no
            ServerAliveInterval 30
            ServerAliveCountMax 5
          END
      - name: ▶ OCP IPI install
        env:
          INSTALL_OCP_VERSION: "candidate-4.10"
          OCP_VERSION_BUILD: "ga"
          IBM_API_KEY: ${{ secrets.IBM_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          FUNC_WORKER_IDS: ${{ secrets.FUNC_WORKER_IDS }}
          FUNC_PROVISION_IP: ${{ secrets.FUNC_PROVISION_IP }}
          FUNC_PROVISION_USER: ${{ secrets.FUNC_PROVISION_USER }}
          FUNC_PROVISION_OC_USER: ${{ secrets.FUNC_PROVISION_OC_USER }}
          FUNC_PROVISION_PORT: ${{ secrets.FUNC_PROVISION_PORT }}
          FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH: ${{ secrets.FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH }}
          FUNC_PROVISION_KUBECONFIG_PATH: ${{ secrets.FUNC_PROVISION_KUBECONFIG_PATH }}
          FUNC_PROVISION_INSTALLER_PATH: ${{ secrets.FUNC_PROVISION_INSTALLER_PATH }}
          FUNC_PROVISION_INSTALLER_CMD: ${{ secrets.FUNC_PROVISION_INSTALLER_CMD }}
          FUNC_PROVISION_INSTALLER_LOG: ${{ secrets.FUNC_PROVISION_INSTALLER_LOG }}
          GITHUB_REPOSITORY_SHORT: ${{ secrets.GIT_REPOSITORY_SHORT }}
          CONTAINER_PRIVATE_KEY_PATH: ${{ secrets.CONTAINER_PRIVATE_KEY_PATH }}
          RUNNER_PATH: ${{ secrets.RUNNER_PATH }}
        run: |
          build=$(pip freeze | grep benchmark-runner | sed 's/==/=/g')
          build_version="$(cut -d'=' -f2 <<<"$build")"
          echo '>>>>>>>>>>>>>>>>>>>>>>>>>> OCP start step: ${{ matrix.step }} >>>>>>>>>>>>>>>>>>>>>>>>>>>>'
          podman run --rm -e OCP_ENV_FLAVOR="FUNC" -e IBM_API_KEY="$IBM_API_KEY" -e GITHUB_TOKEN="$GITHUB_TOKEN" -e INSTALL_OCP_VERSION="$INSTALL_OCP_VERSION" -e INSTALL_STEP="${{ matrix.step }}" -e OCP_VERSION_BUILD="$OCP_VERSION_BUILD" -e FUNC_WORKER_IDS="$FUNC_WORKER_IDS" -e FUNC_PROVISION_IP="$FUNC_PROVISION_IP" -e FUNC_CONTAINER_PRIVATE_KEY_PATH="$FUNC_CONTAINER_PRIVATE_KEY_PATH" -e CONTAINER_PRIVATE_KEY_PATH="$CONTAINER_PRIVATE_KEY_PATH" -e FUNC_PROVISION_USER="$FUNC_PROVISION_USER" -e FUNC_PROVISION_OC_USER="$FUNC_PROVISION_OC_USER" -e FUNC_PROVISION_PORT="$FUNC_PROVISION_PORT" -e FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH="$FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH" -e FUNC_PROVISION_KUBECONFIG_PATH="$FUNC_PROVISION_KUBECONFIG_PATH" -e FUNC_PROVISION_INSTALLER_PATH="$FUNC_PROVISION_INSTALLER_PATH" -e FUNC_PROVISION_INSTALLER_CMD="$FUNC_PROVISION_INSTALLER_CMD" -e FUNC_PROVISION_INSTALLER_LOG="$FUNC_PROVISION_INSTALLER_LOG" -e GITHUB_REPOSITORY_SHORT="$GITHUB_REPOSITORY_SHORT" -e FUNC_PROVISION_TIMEOUT="3600" -e log_level="INFO" -v "$FUNC_PROVISION_PRIVATE_KEY_PATH":"$CONTAINER_PRIVATE_KEY_PATH" -v "/$RUNNER_PATH/.ssh/config":"/$FUNC_PROVISION_USER/.ssh/config" --privileged "quay.io/ebattat/benchmark-runner:v$build_version"
          echo '>>>>>>>>>>>>>>>>>>>>>>>>>> OCP end step: ${{ matrix.step }}   >>>>>>>>>>>>>>>>>>>>>>>>>>>>'
      - name: ▶ Rerun OCP IPI install after failure
        env:
          INSTALL_OCP_VERSION: "candidate-4.10"
          OCP_VERSION_BUILD: "ga"
          IBM_API_KEY: ${{ secrets.IBM_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          FUNC_WORKER_IDS: ${{ secrets.FUNC_WORKER_IDS }}
          FUNC_PROVISION_IP: ${{ secrets.FUNC_PROVISION_IP }}
          FUNC_PROVISION_USER: ${{ secrets.FUNC_PROVISION_USER }}
          FUNC_PROVISION_OC_USER: ${{ secrets.FUNC_PROVISION_OC_USER }}
          FUNC_PROVISION_PORT: ${{ secrets.FUNC_PROVISION_PORT }}
          FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH: ${{ secrets.FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH }}
          FUNC_PROVISION_KUBECONFIG_PATH: ${{ secrets.FUNC_PROVISION_KUBECONFIG_PATH }}
          FUNC_PROVISION_INSTALLER_PATH: ${{ secrets.FUNC_PROVISION_INSTALLER_PATH }}
          FUNC_PROVISION_INSTALLER_CMD: ${{ secrets.FUNC_PROVISION_INSTALLER_CMD }}
          FUNC_PROVISION_INSTALLER_LOG: ${{ secrets.FUNC_PROVISION_INSTALLER_LOG }}
          GITHUB_REPOSITORY_SHORT: ${{ secrets.GIT_REPOSITORY_SHORT }}
          CONTAINER_PRIVATE_KEY_PATH: ${{ secrets.CONTAINER_PRIVATE_KEY_PATH }}
          RUNNER_PATH: ${{ secrets.RUNNER_PATH }}
        if: ${{ failure() }}
        run: |
          build=$(pip freeze | grep benchmark-runner | sed 's/==/=/g')
          build_version="$(cut -d'=' -f2 <<<"$build")"
          echo '>>>>>>>>>>>>>>>>>>>>>>>>>> OCP start step: run_ibm_ocp_ipi_installer >>>>>>>>>>>>>>>>>>>>>>>>>>>>'
          podman run --rm -e OCP_ENV_FLAVOR="FUNC" -e IBM_API_KEY="$IBM_API_KEY" -e GITHUB_TOKEN="$GITHUB_TOKEN" -e INSTALL_OCP_VERSION="$INSTALL_OCP_VERSION" -e INSTALL_STEP="run_ibm_ocp_ipi_installer" -e OCP_VERSION_BUILD="$OCP_VERSION_BUILD" -e FUNC_WORKER_IDS="$FUNC_WORKER_IDS" -e FUNC_PROVISION_IP="$FUNC_PROVISION_IP" -e FUNC_CONTAINER_PRIVATE_KEY_PATH="$FUNC_CONTAINER_PRIVATE_KEY_PATH" -e CONTAINER_PRIVATE_KEY_PATH="$CONTAINER_PRIVATE_KEY_PATH" -e FUNC_PROVISION_USER="$FUNC_PROVISION_USER" -e FUNC_PROVISION_OC_USER="$FUNC_PROVISION_OC_USER" -e FUNC_PROVISION_PORT="$FUNC_PROVISION_PORT" -e FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH="$FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH" -e FUNC_PROVISION_KUBECONFIG_PATH="$FUNC_PROVISION_KUBECONFIG_PATH" -e FUNC_PROVISION_INSTALLER_PATH="$FUNC_PROVISION_INSTALLER_PATH" -e FUNC_PROVISION_INSTALLER_CMD="$FUNC_PROVISION_INSTALLER_CMD" -e FUNC_PROVISION_INSTALLER_LOG="$FUNC_PROVISION_INSTALLER_LOG" -e GITHUB_REPOSITORY_SHORT="$GITHUB_REPOSITORY_SHORT" -e FUNC_PROVISION_TIMEOUT="3600" -e log_level="INFO" -v "$FUNC_PROVISION_PRIVATE_KEY_PATH":"$CONTAINER_PRIVATE_KEY_PATH" -v "/$RUNNER_PATH/.ssh/config":"/$FUNC_PROVISION_USER/.ssh/config" --privileged "quay.io/ebattat/benchmark-runner:v$build_version"
          echo '>>>>>>>>>>>>>>>>>>>>>>>>>> OCP end step: run_ibm_ocp_ipi_installer  >>>>>>>>>>>>>>>>>>>>>>>>>>>>'
          echo '>>>>>>>>>>>>>>>>>>>>>>>>>> OCP start step: verify_install_complete >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
          podman run --rm -e OCP_ENV_FLAVOR="FUNC" -e IBM_API_KEY="$IBM_API_KEY" -e GITHUB_TOKEN="$GITHUB_TOKEN" -e INSTALL_OCP_VERSION="$INSTALL_OCP_VERSION" -e INSTALL_STEP="verify_install_complete" -e OCP_VERSION_BUILD="$OCP_VERSION_BUILD" -e FUNC_WORKER_IDS="$FUNC_WORKER_IDS" -e FUNC_PROVISION_IP="$FUNC_PROVISION_IP" -e FUNC_CONTAINER_PRIVATE_KEY_PATH="$FUNC_CONTAINER_PRIVATE_KEY_PATH" -e CONTAINER_PRIVATE_KEY_PATH="$CONTAINER_PRIVATE_KEY_PATH" -e FUNC_PROVISION_USER="$FUNC_PROVISION_USER" -e FUNC_PROVISION_OC_USER="$FUNC_PROVISION_OC_USER" -e FUNC_PROVISION_PORT="$FUNC_PROVISION_PORT" -e FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH="$FUNC_PROVISION_KUBEADMIN_PASSWORD_PATH" -e FUNC_PROVISION_KUBECONFIG_PATH="$FUNC_PROVISION_KUBECONFIG_PATH" -e FUNC_PROVISION_INSTALLER_PATH="$FUNC_PROVISION_INSTALLER_PATH" -e FUNC_PROVISION_INSTALLER_CMD="$FUNC_PROVISION_INSTALLER_CMD" -e FUNC_PROVISION_INSTALLER_LOG="$FUNC_PROVISION_INSTALLER_LOG" -e GITHUB_REPOSITORY_SHORT="$GITHUB_REPOSITORY_SHORT" -e FUNC_PROVISION_TIMEOUT="3600" -e log_level="INFO" -v "$FUNC_PROVISION_PRIVATE_KEY_PATH":"$CONTAINER_PRIVATE_KEY_PATH" --privileged "quay.io/ebattat/benchmark-runner:v$build_version"
          echo '>>>>>>>>>>>>>>>>>>>>>>>>>> OCP end step: verify_install_complete >>>>>>>>>>>>>>>>>>>>>>>>>>>>'
